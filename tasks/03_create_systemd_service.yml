---
- name: Create systemd user service
  block:
    - name: Ensure systemd user service folder exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/systemd/user"
        state: directory
        mode: "0700"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Create systemd user service files for sync_folders
      when: vm_share_helper_sync_folders | length > 0
      ansible.builtin.template:
        src: vm_share_helper.service.j2
        dest: "{{ ansible_env.HOME }}/.config/systemd/user/vm_share_helper_{{ sync_item.unison_name }}.service"
        mode: "0700"
      with_items: "{{ vm_share_helper_sync_folders }}"
      loop_control:
        loop_var: sync_item
      notify: Reload systemd user services

    - name: Create systemd timer files for sync_folders
      when: vm_share_helper_sync_folders | length > 0
      ansible.builtin.template:
        src: vm_share_helper.timer.j2
        dest: "{{ ansible_env.HOME }}/.config/systemd/user/vm_share_helper_{{ sync_item.unison_name }}.timer"
        mode: "0700"
      with_items: "{{ vm_share_helper_sync_folders }}"
      loop_control:
        loop_var: sync_item
      notify: Reload systemd user services

    - name: Ensure handlers are notified now to systemd conflicts
      ansible.builtin.meta: flush_handlers

    - name: Enable and start sync_folders timer
      when: vm_share_helper_sync_folders | length > 0
      ansible.builtin.systemd_service:
        name: vm_share_helper_{{ sync_item.unison_name }}.timer
        state: started
        enabled: true
        masked: false
        scope: user
      with_items: "{{ vm_share_helper_sync_folders }}"
      loop_control:
        loop_var: sync_item
